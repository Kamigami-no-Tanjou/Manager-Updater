---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by RedNeath.
--- DateTime: 24/02/2024 17:47
---
local checker = require('utils.data_checker')
local sqlize = require('utils.sqlize')

local query_builder = {}

function query_builder.create_insert_query(
        query_skeleton,
        value_skeleton,
        entity_prototype,
        entities,
        escaper
)
    local query = query_skeleton
    local is_first_value = true

    for _, entity in pairs(entities) do
        if not pcall(checker.ensure_model_compliance, entity, entity_prototype, escaper.apply) then
            return entity
        end

        if not is_first_value then
            query = query .. ", " .. query_builder.format_value(value_skeleton, entity, entity_prototype)
        else
            query = query .. query_builder.format_value(value_skeleton, entity, entity_prototype)
            is_first_value = false
        end
    end

    return query
end

function query_builder.format_value(value_skeleton, entity, entity_prototype)
    local indexed_entity = {}

    for index,property_name in pairs(entity_prototype.insert_property_order) do
        if entity_prototype.properties[property_name].prepare then
            entity[property_name] = entity_prototype.properties[property_name].prepare(entity[property_name])
        end
        indexed_entity[index] = sqlize(entity[property_name])
    end

    return string.format(value_skeleton, unpack(indexed_entity))
end

return query_builder
