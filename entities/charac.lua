---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by RedNeath.
--- DateTime: 16/02/2024 22:36
---
local types_default = require('utils.types_default')

local parse_tastes = function(string_tastes)
    local tastes = {}
    local i = 1

    if not string_tastes then return tastes end
    for taste in string.gmatch(string_tastes, "[^;]+") do
        tastes[i] = string.gsub(taste, "^%s*(.-)%s*$", "%1")
        i = i + 1
    end

    return tastes
end

charac = {
    properties = {
        id = { format = tonumber },
        last_names = { format = tostring },
        first_names = { format = tostring },
        portrait = { format = tostring, nullable = true },
        description = { format = tostring, nullable = true },
        calendar = { format = tonumber },
        birthdate = { format = tostring },
        deathdate = { format = tostring, nullable = true },
        magical_potential = { format = tonumber, nullable = true },
        class = { format = tonumber, nullable = true },
        sex = { format = tonumber },
        gender = { format = tonumber, nullable = true },
        sexual_orientation = { format = tostring, nullable = true },
        origin = { format = tonumber, nullable = true },
        height = { format = tonumber, nullable = true },
        hair_colour = { format = tostring, nullable = true },
        eye_colour = { format = tostring, nullable = true },
        appearance = { format = tostring, nullable = true },
        favourite_colour = { format = tostring, nullable = true },
        things_hated = { format = parse_tastes, nullable = true, prepare = compact_tastes },
        things_loved = { format = parse_tastes, nullable = true, prepare = compact_tastes }
    },

    insert_property_order = {
        "last_names", "first_names", "description", "calendar", "birthdate", "deathdate", "magical_potential", "class",
        "sex", "gender", "sexual_orientation", "origin", "height", "hair_colour", "eye_colour", "appearance",
        "favourite_colour", "things_loved", "things_hated"
    },

    update_property_order = {
        "id", "last_names", "first_names", "description", "calendar", "birthdate", "deathdate", "magical_potential",
        "class", "sex", "gender", "sexual_orientation", "origin", "height", "hair_colour", "eye_colour", "appearance",
        "favourite_colour", "things_loved", "things_hated"
    }
}

function charac:new(mapped_fields)
    mapped_fields = mapped_fields or {}
    local instance = {}

    instance.id = mapped_fields.id or mapped_fields[1] or types_default.number
    instance.last_names = mapped_fields.last_names or mapped_fields[2] or types_default.string
    instance.first_names = mapped_fields.first_names or mapped_fields[3] or types_default.string
    instance.portrait = mapped_fields.portrait or mapped_fields[4] or nil
    instance.description = mapped_fields.description or mapped_fields[5] or nil
    instance.calendar = mapped_fields.calendar or mapped_fields[6] or types_default.number
    instance.birthdate = mapped_fields.birthdate or mapped_fields[7] or types_default.string
    instance.deathdate = mapped_fields.deathdate or mapped_fields[8] or nil
    instance.magical_potential = mapped_fields.magical_potential or mapped_fields[9] or nil
    instance.class = mapped_fields.class or mapped_fields[10] or nil
    instance.sex = mapped_fields.sex or mapped_fields[11] or types_default.number
    instance.gender = mapped_fields.gender or mapped_fields[12] or nil
    instance.sexual_orientation = mapped_fields.sexual_orientation or mapped_fields[13] or nil
    instance.origin = mapped_fields.origin or mapped_fields[14] or nil
    instance.height = mapped_fields.height or mapped_fields[15] or nil
    instance.hair_colour = mapped_fields.hair_colour or mapped_fields[16] or nil
    instance.eye_colour = mapped_fields.eye_colour or mapped_fields[17] or nil
    instance.appearance = mapped_fields.appearance or mapped_fields[18] or nil
    instance.favourite_colour = mapped_fields.favourite_colour or mapped_fields[19] or nil
    instance.things_loved = mapped_fields.things_loved or mapped_fields[20] or types_default.table
    instance.things_hated = mapped_fields.things_hated or mapped_fields[21] or types_default.table

    return setmetatable(instance, self)
end

return charac
